version: "3.9"

services:
  api:
    build:
      context: .
    command: >
      bash -c "ruby lib/db_setup.rb &&
      rm -f tmp/pids/server.pid &&
      rails server -b '0.0.0.0'"
    restart: always
    ports:
      - "${RAILS_PORT}:3000"
    volumes:
      - ./api:/api
      - coverage_data:/api/coverage
    env_file:
      - .env
    depends_on:
      db:
        condition: service_healthy

  db:
    image: mongo:latest
    restart: always
    volumes:
      - mongodb_data:/data/db
      - ./mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_PASSWORD}
    healthcheck:
      test: ["CMD", "mongo", "--eval", "db.adminCommand('ping')"]
      interval: 10s
      timeout: 5s
      retries: 5

  test-runner:
    build:
      context: .
    command: >
      bash -c "bundle exec rspec &&
      bundle exec cucumber"
    volumes:
      - ./api:/api
      - coverage_data:/api/coverage
    env_file:
      - .env
    depends_on:
      db:
        condition: service_healthy
    profiles:
      - test

  sonar:
    image: sonarsource/sonar-scanner-cli:latest
    volumes:
      - ./api:/usr/src
      - coverage_data:/usr/src/coverage
    depends_on:
      api:
        condition: service_started
    command: >
      sonar-scanner
      -Dsonar.projectKey=thiagopelizoni_postech-8soat-cliente
      -Dsonar.organization=thiagopelizoni
      -Dsonar.host.url=https://sonarcloud.io
      -Dsonar.sources=/usr/src/app
      -Dsonar.tests=/usr/src/spec,/usr/src/features
      -Dsonar.exclusions=/usr/src/spec/**,/usr/src/features/**
      -Dsonar.coverage.exclusions="/usr/src/spec/**,/usr/src/features/**"
      -Dsonar.ruby.coverage.reportPaths=/usr/src/coverage/coverage.xml
    profiles:
      - sonar

volumes:
  mongodb_data:
  coverage_data:
